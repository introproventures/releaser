<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.introproventures</groupId>
	<artifactId>releaser</artifactId>
	<version>0.0.8-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Releaser</name>
	<description>
		An example for getting your GitHub project to Maven Central. Demonstrates required POM information and release plugin configuration. 
		Many thanks to: http://datumedge.blogspot.co.uk/2012/05/publishing-from-github-to-maven-central.html
	</description>
	<url>https://github.com/davidcarboni/releaser</url>

	<!-- Required: license information: -->
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<!-- Required: source control information: -->
	<scm>
		<url>https://github.com/introproventures/releaser</url>
		<connection>scm:git:git://github.com/introproventures/releaser.git</connection>
		<developerConnection>scm:git:git@github.com:introproventures/releaser.git</developerConnection>
		<tag>0.0.4</tag>
	</scm>

	<distributionManagement>
		<!-- You'll probably want to test this out with a local copy of Nexus OSS. -->
		<!-- Remove these entries and uncomment the Sonatype Nexus repositories 
			below when you actually want to release. -->
		<snapshotRepository>
			<id>localhost-nexus-snapshots</id>
			<name>Local Nexus snapshot repository</name>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>localhost-nexus-staging</id>
			<name>Local Nexus release repository</name>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
<!-- 		<snapshotRepository> -->
<!-- 			<id>sonatype-nexus-snapshots</id> -->
<!-- 			<name>Sonatype Nexus snapshot repository</name> -->
<!-- 			<url>https://oss.sonatype.org/content/repositories/snapshots</url> -->
<!-- 		</snapshotRepository> -->
<!-- 		<repository> -->
<!-- 			<id>sonatype-nexus-staging</id> -->
<!-- 			<name>Sonatype Nexus release repository</name> -->
<!-- 			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url> -->
<!-- 		</repository> -->
	</distributionManagement>

	<properties>
		<!-- Optional, but sensible -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<!-- Include the README, NOTICE and LICENSE files: -->
		<resources>
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>README*</include>
					<include>NOTICE*</include>
					<include>LICENSE*</include>
				</includes>
			</resource>
		</resources>

		<plugins>

			<plugin>
			   	<groupId>org.apache.maven.plugins</groupId>
			   	<artifactId>maven-deploy-plugin</artifactId>
			 	<version>2.8.2</version>			   
			   	<configuration>
			    	<skip>true</skip>
			   	</configuration>
			</plugin>

			<!-- Optional: JVM version compliance and encoding: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- Optional: ensure the manifest contains artifact version information: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Required: source JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Required: javadoc JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Release configuration: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>

				<configuration>
					<tagNameFormat>@{version}</tagNameFormat>
				    <autoVersionSubmodules>true</autoVersionSubmodules>
				    <releaseProfiles>releases</releaseProfiles>
					<!-- Automated passphrase entry: -->

					<!-- To pass your passphrase to the build automatically, so avoiding 
						manual interaction, you'll need to put the passphrase into settings.xml. 
						You don't really want that to be in plain text, so you'll want to follow: 
						http://maven.apache.org/guides/mini/guide-encryption.html -->
					<!-- <arguments>-Dgpg.passphrase=${gpg.password}</arguments> -->

					<!-- Manual passphrase entry: -->

					<!-- This is the simplest secure solution, but requires you to type 
						your key passphrase in manually when performing a release. No biggie unless 
						you want your CI server to decide when to release for you. -->
					<mavenExecutorId>forked-path</mavenExecutorId>

				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<profile>
	      <id>releases</id>
	      <build>
	         <plugins>
				<!-- Deployment -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.7</version>
				 	<executions>
				      <execution>
				         <id>default-deploy</id>
				         <phase>deploy</phase>
				         <goals>
				            <goal>deploy</goal>
				         </goals>
				      </execution>
				   </executions>				
					<extensions>true</extensions>
					<configuration>
						<serverId>localhost-nexus-staging</serverId>
						<nexusUrl>http://localhost:8081/nexus</nexusUrl>
						<skipStaging>true</skipStaging>
	<!-- 					<serverId>sonatype-nexus-staging</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
	 -->				</configuration>
				</plugin>
	         </plugins>
	      </build>
	   </profile>		

		<!-- GPG Signature on release -->
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<!-- Required: developer information: -->
	<developers>
		<developer>
			<id>igdianov</id>
			<name>Igor Dianov</name>
			<email>igor@dianov.com</email>
			<organization>IntroPro Ventures Inc.</organization>
			<organizationUrl>https://github.com/introproventures</organizationUrl>
			<url>https://github.com/igdianov</url>
		</developer>
	</developers>

</project>